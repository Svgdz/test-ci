version: 2.1

# Use the LambdaTest orb for simplified tunnel management
orbs:
  lambda-tunnel: lambdatest/lambda-tunnel@1.0.0

# Define reusable commands
commands:
  install_dependencies:
    description: 'Install project dependencies with caching'
    steps:
      - restore_cache:
          keys:
            - v5-e2e-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
            - v5-e2e-
      - run:
          name: 'Install npm dependencies'
          command: |
            export HUSKY=0
            echo "Node version: $(node --version)"
            echo "npm version: $(npm --version)"

            if [ -f "package-lock.json" ]; then
              npm ci --include=dev --no-audit
            else
              npm install --include=dev --no-audit
            fi

            # Install LambdaTest CLI
            sudo npm install -g lambdatest-cypress-cli
      - save_cache:
          key: v5-e2e-{{ checksum "package-lock.json" }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - node_modules

  load_env_file:
    description: 'Generate .env file from CircleCI environment variables'
    steps:
      - run:
          name: Generate .env for build/runtime
          command: |
            cat > .env \<< EOF
            NEXT_LOG_LEVEL=${NEXT_LOG_LEVEL:-info}
            SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-}
            NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-}
            DATABASE_URL=${DATABASE_URL:-}
            NODE_ENV=production
            E2B_API_KEY=${E2B_API_KEY:-}
            CYPRESS_BASE_URL=http://localhost:3000
            CYPRESS_TEST_EMAIL=${CYPRESS_TEST_EMAIL:-cypress-test@example.com}
            CYPRESS_TEST_PASSWORD=${CYPRESS_TEST_PASSWORD:-CypressTest123!}
            EOF

# Define the jobs
jobs:
  e2e_lambdatest:
    docker:
      - image: cimg/node:20.19.0-browsers
    working_directory: ~/project
    environment:
      LT_BUILD_NAME: 'AIBEXX-E2E-${CIRCLE_BUILD_NUM}'
    steps:
      - checkout
      - install_dependencies
      - load_env_file

      # Build and start the application
      - run:
          name: 'Build application'
          command: npm run build
      - run:
          name: 'Start application server'
          command: npm start
          background: true
      - run:
          name: 'Wait for application to be ready'
          command: |
            timeout 120 bash -c 'until curl --output /dev/null --silent --head --fail http://localhost:3000; do sleep 2; done'
            echo "Application is ready!"

      # Setup LambdaTest configuration
      - run:
          name: 'Setup LambdaTest configuration'
          command: |
            # Update lambdatest-config.json with actual credentials
            sed -i "s|\${LT_USERNAME}|${LT_USERNAME}|g" lambdatest-config.json
            sed -i "s|\${LT_ACCESS_KEY}|${LT_ACCESS_KEY}|g" lambdatest-config.json
            sed -i "s|\${LT_BUILD_NAME:-AIBEXX-E2E-Local}|AIBEXX-E2E-${CIRCLE_BUILD_NUM}|g" lambdatest-config.json
            sed -i "s|\${NEXT_PUBLIC_SUPABASE_URL}|${NEXT_PUBLIC_SUPABASE_URL}|g" lambdatest-config.json
            sed -i "s|\${NEXT_PUBLIC_SUPABASE_ANON_KEY}|${NEXT_PUBLIC_SUPABASE_ANON_KEY}|g" lambdatest-config.json
            sed -i "s|\${SUPABASE_SERVICE_ROLE_KEY}|${SUPABASE_SERVICE_ROLE_KEY}|g" lambdatest-config.json
            sed -i "s|\${E2B_API_KEY}|${E2B_API_KEY}|g" lambdatest-config.json
            sed -i "s|\${CYPRESS_TEST_EMAIL}|${CYPRESS_TEST_EMAIL:-cypress-test@example.com}|g" lambdatest-config.json
            sed -i "s|\${CYPRESS_TEST_PASSWORD}|${CYPRESS_TEST_PASSWORD:-CypressTest123!}|g" lambdatest-config.json

      # Use LambdaTest orb to manage tunnel and run tests
      - lambda-tunnel/with_tunnel:
          tunnel_name: 'aibexx-e2e-tunnel'
          after_tunnel:
            - run:
                name: 'Run E2E Tests on LambdaTest'
                command: |
                  echo "Running E2E tests with LambdaTest tunnel..."
                  npx lambdatest-cypress run --config-file="lambdatest-config.json" --cy="--config-file cypress.config.ts --browser chrome"

      # Store test results
      - store_test_results:
          path: src/__test__/results
      - store_artifacts:
          path: src/__test__/results
          destination: e2e-test-results
          when: always
      - store_artifacts:
          path: src/__test__/screenshots
          destination: e2e-screenshots
          when: always
      - store_artifacts:
          path: src/__test__/videos
          destination: e2e-videos
          when: always

# Define workflows
workflows:
  version: 2
  e2e_only:
    jobs:
      - e2e_lambdatest
